There can be many malloc implementations in a process. For example,
there may be the libc's malloc in a .so, a custom malloc in the
executable, and (in our case) liballocs's private malloc. Each of these
malloc implementations has its own entry points which need to be
interposed on separately. It should also have its own 'struct
allocator'.

The word 'wrapper' is horribly overloaded in the context of malloc.
It can mean (leading with a better word in each case)

- 'facade': a function in user code which backs onto malloc (et al)
or transitively, another facade

- 'stub': a generated caller-side function used to latch the call site
address

- XXX need a new word ('gate'?): a generated callee-side function used
to invoke indexing routines


